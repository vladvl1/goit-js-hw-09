{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAASC,SAASC,cAAc,QAChCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAgBJ,SAASC,cAAc,wBAE7C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAELH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAuBbR,EAAOgB,iBAAiB,UApBIC,IAC1BA,EAAEC,iBACF,MAAMC,EAAkBC,OAAOf,EAAcgB,OAC7C,IAAIC,EAAYF,OAAOjB,EAAakB,OACpC,MAAME,EAAcH,OAAOhB,EAAYiB,OAGvC,GAAIF,GAAmB,GAAKG,GAAa,GAAKC,EAAc,EAC1DC,EAAA1B,GAAS2B,OAAOC,QAAQ,iCAG1B,IAAK,IAAInB,EAAW,EAAGA,EAAWY,EAAiBZ,IACjDD,EAAcC,EAAUe,GACrBK,MAAKC,GACD9B,EAAA+B,OAAOC,QAAQ,qBAAqBV,OAAOb,EAAW,SAASqB,EAAEpB,aACrEuB,OAAMH,GACF9B,EAAA+B,OAAOH,QAAQ,oBAAoBN,OAAOb,EAAW,SAASqB,EAAEpB,aACjEc,GAAaC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from \"notiflix\";\n\n\nconst formEl = document.querySelector('form');\nconst inputDelayEl = document.querySelector('input[name=\"delay\"]');\nconst inputStepEl = document.querySelector('input[name=\"step\"]');\nconst inputAmountEl = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      \n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nconst handleSubmitPromise = e => {\n  e.preventDefault();\n  const numberOfPromise = Number(inputAmountEl.value);\n  let prevDelay = Number(inputDelayEl.value);\n  const stepPromise = Number(inputStepEl.value);\n\n\n  if (numberOfPromise <= 0 || prevDelay <= 0 || stepPromise < 0) {\n    Notiflix.Report.failure(\"Please choose valid data\");\n    return;\n  }\n  for (let position = 0; position < numberOfPromise; position++) {\n    createPromise(position, prevDelay)\n      .then(x => \n           Notify.success(`Fulfilled promise ${Number(position + 1)} in ${x.delay}ms`))\n      .catch(x =>\n           Notify.failure(`Rejected promise ${Number(position + 1)} in ${x.delay}ms`));\n          prevDelay += stepPromise;\n}\n};\nformEl.addEventListener(\"submit\", handleSubmitPromise);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$inputDelayEl","$47d4ff9957288465$var$inputStepEl","$47d4ff9957288465$var$inputAmountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","numberOfPromise","Number","value","prevDelay","stepPromise","$parcel$interopDefault","Report","failure","then","x","Notify","success","catch"],"version":3,"file":"03-promises.05b551d3.js.map"}