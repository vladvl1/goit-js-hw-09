{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,QAChCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAgBJ,SAASC,cAAc,wBAkC7CF,EAAOM,iBAAiB,UApBI,SAAAC,G,mBAZ5B,SAAuBC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WAELH,GACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GACpBA,E,KAeHQ,CAAcT,EAAUU,GACrBC,MAAK,SAAAC,G,OACDtB,EAAAuB,OAAOC,QAAQ,qBAAgDC,OAA3BC,OAAOhB,EAAW,GAAG,QAAce,OAARH,EAAEX,MAAM,M,IAC3EgB,OAAM,SAAAL,G,OACFtB,EAAAuB,OAAOK,QAAQ,oBAA+CH,OAA3BC,OAAOhB,EAAW,GAAG,QAAce,OAARH,EAAEX,MAAM,M,IACvES,GAAaS,C,EAhBrBpB,EAAEqB,iBACF,IAAMC,EAAkBL,OAAOnB,EAAcyB,OACzCZ,EAAYM,OAAOrB,EAAa2B,OAC9BH,EAAcH,OAAOpB,EAAY0B,OAGvC,GAAID,GAAmB,GAAKX,GAAa,GAAKS,EAAc,EAC1DI,EAAAjC,GAASkC,OAAON,QAAQ,iCAG1B,IAAK,IAAIO,EAAW,EAAGA,EAAWJ,EAAiBI,IAAUC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from \"notiflix\";\n\n\nconst formEl = document.querySelector('form');\nconst inputDelayEl = document.querySelector('input[name=\"delay\"]');\nconst inputStepEl = document.querySelector('input[name=\"step\"]');\nconst inputAmountEl = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      \n      if (shouldResolve) {\n        resolve({ position, delay });\n      } \n        reject({ position, delay });\n    }, delay);\n  });\n}\nconst handleSubmitPromise = e => {\n  e.preventDefault();\n  const numberOfPromise = Number(inputAmountEl.value);\n  let prevDelay = Number(inputDelayEl.value);\n  const stepPromise = Number(inputStepEl.value);\n\n\n  if (numberOfPromise <= 0 || prevDelay <= 0 || stepPromise < 0) {\n    Notiflix.Report.failure(\"Please choose valid data\");\n    return;\n  }\n  for (let position = 0; position < numberOfPromise; position++) {\n    createPromise(position, prevDelay)\n      .then(x => \n           Notify.success(`Fulfilled promise ${Number(position + 1)} in ${x.delay}ms`))\n      .catch(x =>\n           Notify.failure(`Rejected promise ${Number(position + 1)} in ${x.delay}ms`));\n          prevDelay += stepPromise;\n}\n};\nformEl.addEventListener(\"submit\", handleSubmitPromise);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelayEl","$ce04d3a99e08e73b$var$inputStepEl","$ce04d3a99e08e73b$var$inputAmountEl","addEventListener","e","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","prevDelay","then","x","Notify","success","concat","Number","catch","failure","stepPromise","preventDefault","numberOfPromise","value","$parcel$interopDefault","Report","position1","_loop"],"version":3,"file":"03-promises.907a1f6c.js.map"}